version: '3.8'

# üß¨ LysoData-Miner Production Deployment from Docker Hub
# 
# –≠—Ç–æ—Ç docker-compose –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–æ—Ç–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã —Å Docker Hub
# –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–±–æ—Ä–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ

services:
  # üóÑÔ∏è PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: lysodata_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-lysobacter_db}
      POSTGRES_USER: ${POSTGRES_USER:-lysobacter_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-lysobacter_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      # –î–∞–Ω–Ω—ã–µ –±–∞–∑—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ —Ö–æ—Å—Ç–µ
      - ./data/postgres:/var/lib/postgresql/data
      # –ë—ç–∫–∞–ø—ã —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ —Ö–æ—Å—Ç–µ
      - ./backups:/var/lib/postgresql/backups
    ports:
      - "${DB_PORT:-5434}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-lysobacter_user} -d ${POSTGRES_DB:-lysobacter_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - lysodata_net
    labels:
      - "lysodata.service=database"
      - "lysodata.description=PostgreSQL database for strain data"

  # üêç FastAPI Backend (–∏–∑ Docker Hub)
  backend:
    image: gimmyhat/lysodata-backend:${BACKEND_VERSION:-latest}
    container_name: lysodata_api
    restart: unless-stopped
    environment:
      # Database connection
      POSTGRES_HOST: database
      POSTGRES_PORT: "5432"
      POSTGRES_DB: ${POSTGRES_DB:-lysobacter_db}
      POSTGRES_USER: ${POSTGRES_USER:-lysobacter_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-lysobacter_password}
      
      # Application settings
      APP_NAME: LysoData-Miner
      DEBUG: "false"
      HOST: 0.0.0.0
      PORT: "8000"
      
      # API settings
      MAX_RESULTS_PER_PAGE: "100"
      DEFAULT_TOLERANCE: "2"
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - lysodata_net
    labels:
      - "lysodata.service=backend"
      - "lysodata.description=FastAPI backend for strain identification"

  # ‚öõÔ∏è React Frontend (–∏–∑ Docker Hub)
  frontend:
    image: gimmyhat/lysodata-frontend:${FRONTEND_VERSION:-latest}
    container_name: lysodata_web
    restart: unless-stopped
    environment:
      VITE_API_URL: /api
    ports:
      - "${WEB_PORT:-3000}:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - lysodata_net
    labels:
      - "lysodata.service=frontend"
      - "lysodata.description=React frontend for Lysobacter strain identification"

  # üìä Data Initialization (–∏–∑ Docker Hub)
  data-init:
    image: gimmyhat/lysodata-backend:${BACKEND_VERSION:-latest}
    container_name: lysodata_init
    restart: "no"
    environment:
      # Database connection (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DB_HOST –≤–º–µ—Å—Ç–æ POSTGRES_HOST)
      DB_HOST: database
      DB_PORT: "5432"
      POSTGRES_DB: ${POSTGRES_DB:-lysobacter_db}
      POSTGRES_USER: ${POSTGRES_USER:-lysobacter_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-lysobacter_password}
    command: python init_database.py
    depends_on:
      database:
        condition: service_healthy
    networks:
      - lysodata_net
    labels:
      - "lysodata.service=init"
      - "lysodata.description=One-time database initialization"

  # üîß pgAdmin (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: lysodata_admin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    depends_on:
      database:
        condition: service_healthy
    networks:
      - lysodata_net
    labels:
      - "lysodata.service=admin"
      - "lysodata.description=Database administration interface"
    profiles:
      - admin

volumes:
  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º volumes –¥–ª—è —è–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  postgres_data:
    driver: local

networks:
  lysodata_net:
    driver: bridge
    labels:
      - "lysodata.network=main" 