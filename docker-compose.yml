version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lysobacter_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-lysobacter_db}
      POSTGRES_USER: ${POSTGRES_USER:-lysobacter_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-lysobacter_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "${DB_PORT:-5434}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
      - ./database/schema:/var/lib/postgresql/schema:ro
      - ./database/examples:/var/lib/postgresql/examples:ro
      - ./backups:/var/lib/postgresql/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-lysobacter_user} -d ${POSTGRES_DB:-lysobacter_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - lysobacter_network
    labels:
      - "com.lysobacter.service=database"
      - "com.lysobacter.description=PostgreSQL database for lysobacter strains"

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: lysobacter_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "${PGADMIN_PORT:-8080}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - lysobacter_network
    labels:
      - "com.lysobacter.service=admin"
      - "com.lysobacter.description=pgAdmin interface for database management"
    profiles:
      - admin

  # Database initialization service
  db-init:
    image: postgres:15-alpine
    container_name: lysobacter_init
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD:-lysobacter_password}
    volumes:
      - ./database/schema:/schema:ro
      - ./database/examples:/examples:ro
      - ./scripts:/scripts:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - lysobacter_network
    command: |
      sh -c "
        echo 'Initializing database schema...'
        psql -h postgres -U ${POSTGRES_USER:-lysobacter_user} -d ${POSTGRES_DB:-lysobacter_db} -f /schema/01_create_tables.sql
        echo 'Loading reference data...'
        psql -h postgres -U ${POSTGRES_USER:-lysobacter_user} -d ${POSTGRES_DB:-lysobacter_db} -f /schema/02_insert_reference_data.sql
        echo 'Creating views and functions...'
        psql -h postgres -U ${POSTGRES_USER:-lysobacter_user} -d ${POSTGRES_DB:-lysobacter_db} -f /schema/03_views_and_functions.sql
        echo 'Loading sample data...'
        psql -h postgres -U ${POSTGRES_USER:-lysobacter_user} -d ${POSTGRES_DB:-lysobacter_db} -f /examples/sample_data.sql || echo 'Sample data loading failed (expected)'
        echo 'Database initialization completed!'
      "
    profiles:
      - init

volumes:
  postgres_data:
    driver: local
    labels:
      - "com.lysobacter.volume=database"
  pgadmin_data:
    driver: local
    labels:
      - "com.lysobacter.volume=admin"

networks:
  lysobacter_network:
    driver: bridge
    labels:
      - "com.lysobacter.network=main" 