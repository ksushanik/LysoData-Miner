# üß¨ LysoData-Miner Development Makefile
# =====================================
# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

.PHONY: help setup db-start dev-up dev-down dev-restart dev-status dev-logs \
        dev-backend dev-frontend dev-shell-backend dev-shell-frontend dev-shell-db

# –¶–≤–µ—Ç–∞ –≤—ã–≤–æ–¥–∞
BLUE  := \033[34m
GREEN := \033[32m
YELLOW:= \033[33m
RED   := \033[31m
RESET := \033[0m

# –§–∞–π–ª—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
DEV_COMPOSE_FILE := config/docker/docker-compose.dev.yml
ENV_FILE_DEV     := .env.dev

# –í—ã–±–∏—Ä–∞–µ–º docker compose (–ø–ª–∞–≥–∏–Ω) –≤–º–µ—Å—Ç–æ —É—Å—Ç–∞—Ä–µ–≤—à–µ–≥–æ docker-compose
DC := docker compose

help: ## –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)üß¨ LysoData-Miner Development$(RESET)"
	@echo "$(BLUE)================================$(RESET)"
	@echo ""
	@echo "$(GREEN)üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:$(RESET)"
	@echo "  make db-start && make dev-backend && make dev-frontend"
	@echo ""
	@echo "$(GREEN)–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(RESET)"
	@awk 'BEGIN {FS = ":.*##"} /^[a-zA-Z_-]+:.*##/ { printf "  $(YELLOW)%-18s$(RESET) %s\n", $$1, $$2 }' $(MAKEFILE_LIST)

# -----------------------------------------------------
# ‚õè  Setup
# -----------------------------------------------------
setup: ## –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ (—Å–æ–∑–¥–∞–Ω–∏–µ .env.dev –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏)
	@if [ ! -f $(ENV_FILE_DEV) ]; then \
		 echo "$(YELLOW)‚ö†Ô∏è  $(ENV_FILE_DEV) –Ω–µ –Ω–∞–π–¥–µ–Ω, –∫–æ–ø–∏—Ä—É—é –∏–∑ –ø—Ä–∏–º–µ—Ä–∞...$(RESET)"; \
		 if [ -f env.dev.example ]; then cp env.dev.example $(ENV_FILE_DEV); else touch $(ENV_FILE_DEV); fi; \
		 echo "$(GREEN)‚úÖ $(ENV_FILE_DEV) —Å–æ–∑–¥–∞–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã!$(RESET)"; \
	fi

# -----------------------------------------------------
# üêò Database
# -----------------------------------------------------

db-start: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–∏ pgAdmin) –≤ Docker
	@echo "$(BLUE)üêò –ó–∞–ø—É—Å–∫ PostgreSQL –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(RESET)"
	$(DC) -f $(DEV_COMPOSE_FILE) --env-file $(ENV_FILE_DEV) up -d postgres pgadmin

# -----------------------------------------------------
# üõ†  Stack management
# -----------------------------------------------------

dev-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ—Å—å —Å—Ç–µ–∫ (DB + backend + frontend)
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(RESET)"
	$(DC) -f $(DEV_COMPOSE_FILE) --env-file $(ENV_FILE_DEV) up -d
	@$(MAKE) dev-status

dev-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@echo "$(BLUE)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(RESET)"
	$(DC) -f $(DEV_COMPOSE_FILE) --env-file $(ENV_FILE_DEV) down


dev-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@$(MAKE) dev-down
	@$(MAKE) dev-up


dev-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏$(RESET)"
	$(DC) -f $(DEV_COMPOSE_FILE) --env-file $(ENV_FILE_DEV) ps


dev-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ (follow)
	@echo "$(BLUE)üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏$(RESET)"
	$(DC) -f $(DEV_COMPOSE_FILE) --env-file $(ENV_FILE_DEV) logs -f

# -----------------------------------------------------
# üéØ Individual services
# -----------------------------------------------------

dev-backend: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å/–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ backend
	@echo "$(BLUE)üêç –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–∏—Å–∞...$(RESET)"
	$(DC) -f $(DEV_COMPOSE_FILE) --env-file $(ENV_FILE_DEV) up -d backend


dev-frontend: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å/–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ frontend
	@echo "$(BLUE)‚öõÔ∏è  –ó–∞–ø—É—Å–∫ frontend —Å–µ—Ä–≤–∏—Å–∞...$(RESET)"
	$(DC) -f $(DEV_COMPOSE_FILE) --env-file $(ENV_FILE_DEV) up -d frontend

# shells

dev-shell-backend: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ shell –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ backend
	$(DC) -f $(DEV_COMPOSE_FILE) exec backend sh

dev-shell-frontend: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ shell –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ frontend
	$(DC) -f $(DEV_COMPOSE_FILE) exec frontend sh

dev-shell-db: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ psql –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ postgres
	$(DC) -f $(DEV_COMPOSE_FILE) exec postgres psql -U $$POSTGRES_USER -d $$POSTGRES_DB
